<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.20.1106.0321                               -->
<workbook original-version='18.1' source-build='2020.4.0 (20204.20.1106.0321)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='nfl_football_team_stats' inline='true' name='federated.1edcykc028fet31e6p2j80nohoei' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='nfl_football_team_stats' name='textscan.1aosh231cjualb10nkfke0ordblf'>
            <connection class='textscan' directory='C:/Users/asair/OneDrive/Escritorio/Ironhack/Data Analytics Bootcamp/lab-tableau-data-visualization/data' filename='nfl_football_team_stats.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1aosh231cjualb10nkfke0ordblf' name='nfl_football_team_stats.csv' table='[nfl_football_team_stats#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='es_MX' separator=','>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='integer' name='GameNumber' ordinal='2' />
            <column datatype='string' name='GameLocation' ordinal='3' />
            <column datatype='string' name='Team' ordinal='4' />
            <column datatype='integer' name='TeamScore' ordinal='5' />
            <column datatype='string' name='Opponent' ordinal='6' />
            <column datatype='integer' name='OppponentScore' ordinal='7' />
            <column datatype='string' name='Result' ordinal='8' />
            <column datatype='integer' name='PassingAttempts' ordinal='9' />
            <column datatype='integer' name='PassingCompletions' ordinal='10' />
            <column datatype='integer' name='PassingInterceptions' ordinal='11' />
            <column datatype='real' name='PasserRating' ordinal='12' />
            <column datatype='integer' name='PassingSacks' ordinal='13' />
            <column datatype='integer' name='PassingSacksYardsLost' ordinal='14' />
            <column datatype='integer' name='PassingTouchdowns' ordinal='15' />
            <column datatype='integer' name='PassingYards' ordinal='16' />
            <column datatype='integer' name='ReceivingReceptions' ordinal='17' />
            <column datatype='integer' name='ReceivingTargets' ordinal='18' />
            <column datatype='integer' name='ReceivingTouchdowns' ordinal='19' />
            <column datatype='integer' name='ReceivingYards' ordinal='20' />
            <column datatype='integer' name='RushingAttempts' ordinal='21' />
            <column datatype='integer' name='RushingTouchdowns' ordinal='22' />
            <column datatype='integer' name='RushingYards' ordinal='23' />
            <column datatype='integer' name='DefenseTackes' ordinal='24' />
            <column datatype='integer' name='DefenseTackleAssists' ordinal='25' />
            <column datatype='real' name='DefenseSacks' ordinal='26' />
            <column datatype='integer' name='DefenseSafeties' ordinal='27' />
            <column datatype='integer' name='DefenseInterceptions' ordinal='28' />
            <column datatype='integer' name='DefenseInterceptionYards' ordinal='29' />
            <column datatype='integer' name='DefenseInterceptionTouchdowns' ordinal='30' />
            <column datatype='integer' name='KickReturnAttempts' ordinal='31' />
            <column datatype='integer' name='KickReturnTouchdowns' ordinal='32' />
            <column datatype='integer' name='KickReturnYards' ordinal='33' />
            <column datatype='integer' name='PuntReturnAttempts' ordinal='34' />
            <column datatype='integer' name='PuntReturnTouchdowns' ordinal='35' />
            <column datatype='integer' name='PuntReturnYards' ordinal='36' />
            <column datatype='integer' name='FieldGoalAttempts' ordinal='37' />
            <column datatype='integer' name='FieldGoals' ordinal='38' />
            <column datatype='integer' name='PuntingAttempts' ordinal='39' />
            <column datatype='integer' name='PuntsBlocked' ordinal='40' />
            <column datatype='integer' name='PuntingYards' ordinal='41' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1aosh231cjualb10nkfke0ordblf' name='nfl_football_team_stats.csv' table='[nfl_football_team_stats#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='es_MX' separator=','>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='integer' name='GameNumber' ordinal='2' />
            <column datatype='string' name='GameLocation' ordinal='3' />
            <column datatype='string' name='Team' ordinal='4' />
            <column datatype='integer' name='TeamScore' ordinal='5' />
            <column datatype='string' name='Opponent' ordinal='6' />
            <column datatype='integer' name='OppponentScore' ordinal='7' />
            <column datatype='string' name='Result' ordinal='8' />
            <column datatype='integer' name='PassingAttempts' ordinal='9' />
            <column datatype='integer' name='PassingCompletions' ordinal='10' />
            <column datatype='integer' name='PassingInterceptions' ordinal='11' />
            <column datatype='real' name='PasserRating' ordinal='12' />
            <column datatype='integer' name='PassingSacks' ordinal='13' />
            <column datatype='integer' name='PassingSacksYardsLost' ordinal='14' />
            <column datatype='integer' name='PassingTouchdowns' ordinal='15' />
            <column datatype='integer' name='PassingYards' ordinal='16' />
            <column datatype='integer' name='ReceivingReceptions' ordinal='17' />
            <column datatype='integer' name='ReceivingTargets' ordinal='18' />
            <column datatype='integer' name='ReceivingTouchdowns' ordinal='19' />
            <column datatype='integer' name='ReceivingYards' ordinal='20' />
            <column datatype='integer' name='RushingAttempts' ordinal='21' />
            <column datatype='integer' name='RushingTouchdowns' ordinal='22' />
            <column datatype='integer' name='RushingYards' ordinal='23' />
            <column datatype='integer' name='DefenseTackes' ordinal='24' />
            <column datatype='integer' name='DefenseTackleAssists' ordinal='25' />
            <column datatype='real' name='DefenseSacks' ordinal='26' />
            <column datatype='integer' name='DefenseSafeties' ordinal='27' />
            <column datatype='integer' name='DefenseInterceptions' ordinal='28' />
            <column datatype='integer' name='DefenseInterceptionYards' ordinal='29' />
            <column datatype='integer' name='DefenseInterceptionTouchdowns' ordinal='30' />
            <column datatype='integer' name='KickReturnAttempts' ordinal='31' />
            <column datatype='integer' name='KickReturnTouchdowns' ordinal='32' />
            <column datatype='integer' name='KickReturnYards' ordinal='33' />
            <column datatype='integer' name='PuntReturnAttempts' ordinal='34' />
            <column datatype='integer' name='PuntReturnTouchdowns' ordinal='35' />
            <column datatype='integer' name='PuntReturnYards' ordinal='36' />
            <column datatype='integer' name='FieldGoalAttempts' ordinal='37' />
            <column datatype='integer' name='FieldGoals' ordinal='38' />
            <column datatype='integer' name='PuntingAttempts' ordinal='39' />
            <column datatype='integer' name='PuntsBlocked' ordinal='40' />
            <column datatype='integer' name='PuntingYards' ordinal='41' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;es_MX&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GameNumber</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GameNumber]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>GameNumber</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GameLocation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GameLocation]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>GameLocation</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TeamScore</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TeamScore]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>TeamScore</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Opponent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Opponent]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>Opponent</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OppponentScore</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OppponentScore]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>OppponentScore</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Result]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>Result</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PassingAttempts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PassingAttempts]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>PassingAttempts</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PassingCompletions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PassingCompletions]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>PassingCompletions</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PassingInterceptions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PassingInterceptions]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>PassingInterceptions</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PasserRating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PasserRating]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>PasserRating</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PassingSacks</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PassingSacks]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>PassingSacks</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PassingSacksYardsLost</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PassingSacksYardsLost]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>PassingSacksYardsLost</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PassingTouchdowns</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PassingTouchdowns]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>PassingTouchdowns</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PassingYards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PassingYards]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>PassingYards</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ReceivingReceptions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ReceivingReceptions]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>ReceivingReceptions</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ReceivingTargets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ReceivingTargets]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>ReceivingTargets</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ReceivingTouchdowns</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ReceivingTouchdowns]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>ReceivingTouchdowns</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ReceivingYards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ReceivingYards]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>ReceivingYards</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RushingAttempts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RushingAttempts]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>RushingAttempts</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RushingTouchdowns</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RushingTouchdowns]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>RushingTouchdowns</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RushingYards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RushingYards]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>RushingYards</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DefenseTackes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DefenseTackes]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>DefenseTackes</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DefenseTackleAssists</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DefenseTackleAssists]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>DefenseTackleAssists</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DefenseSacks</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DefenseSacks]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>DefenseSacks</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DefenseSafeties</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DefenseSafeties]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>DefenseSafeties</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DefenseInterceptions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DefenseInterceptions]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>DefenseInterceptions</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DefenseInterceptionYards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DefenseInterceptionYards]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>DefenseInterceptionYards</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DefenseInterceptionTouchdowns</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DefenseInterceptionTouchdowns]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>DefenseInterceptionTouchdowns</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>KickReturnAttempts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[KickReturnAttempts]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>KickReturnAttempts</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>KickReturnTouchdowns</remote-name>
            <remote-type>20</remote-type>
            <local-name>[KickReturnTouchdowns]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>KickReturnTouchdowns</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>KickReturnYards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[KickReturnYards]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>KickReturnYards</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PuntReturnAttempts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PuntReturnAttempts]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>PuntReturnAttempts</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PuntReturnTouchdowns</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PuntReturnTouchdowns]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>PuntReturnTouchdowns</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PuntReturnYards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PuntReturnYards]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>PuntReturnYards</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FieldGoalAttempts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FieldGoalAttempts]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>FieldGoalAttempts</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FieldGoals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FieldGoals]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>FieldGoals</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PuntingAttempts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PuntingAttempts]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>PuntingAttempts</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PuntsBlocked</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PuntsBlocked]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>PuntsBlocked</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PuntingYards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PuntingYards]</local-name>
            <parent-name>[nfl_football_team_stats.csv]</parent-name>
            <remote-alias>PuntingYards</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Completion Percentage' datatype='real' name='[Calculation_1243275038302281729]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[PassingCompletions]/[PassingAttempts]' />
      </column>
      <column caption='Defense Interception Touchdowns' datatype='integer' name='[DefenseInterceptionTouchdowns]' role='measure' type='quantitative' />
      <column caption='Defense Interception Yards' datatype='integer' name='[DefenseInterceptionYards]' role='measure' type='quantitative' />
      <column caption='Defense Interceptions' datatype='integer' name='[DefenseInterceptions]' role='measure' type='quantitative' />
      <column caption='Defense Sacks' datatype='real' name='[DefenseSacks]' role='measure' type='quantitative' />
      <column caption='Defense Safeties' datatype='integer' name='[DefenseSafeties]' role='measure' type='quantitative' />
      <column caption='Defense Tackes' datatype='integer' name='[DefenseTackes]' role='measure' type='quantitative' />
      <column caption='Defense Tackle Assists' datatype='integer' name='[DefenseTackleAssists]' role='measure' type='quantitative' />
      <column caption='Field Goal Attempts' datatype='integer' name='[FieldGoalAttempts]' role='measure' type='quantitative' />
      <column caption='Field Goals' datatype='integer' name='[FieldGoals]' role='measure' type='quantitative' />
      <column caption='Game Location' datatype='string' name='[GameLocation]' role='dimension' type='nominal' />
      <column caption='Game Number' datatype='integer' name='[GameNumber]' role='dimension' type='ordinal' />
      <column caption='Kick Return Attempts' datatype='integer' name='[KickReturnAttempts]' role='measure' type='quantitative' />
      <column caption='Kick Return Touchdowns' datatype='integer' name='[KickReturnTouchdowns]' role='measure' type='quantitative' />
      <column caption='Kick Return Yards' datatype='integer' name='[KickReturnYards]' role='measure' type='quantitative' />
      <column caption='Oppponent Score' datatype='integer' name='[OppponentScore]' role='measure' type='quantitative' />
      <column caption='Passer Rating' datatype='real' name='[PasserRating]' role='measure' type='quantitative' />
      <column caption='Passing Attempts' datatype='integer' name='[PassingAttempts]' role='measure' type='quantitative' />
      <column caption='Passing Completions' datatype='integer' name='[PassingCompletions]' role='measure' type='quantitative' />
      <column caption='Passing Interceptions' datatype='integer' name='[PassingInterceptions]' role='measure' type='quantitative' />
      <column caption='Passing Sacks Yards Lost' datatype='integer' name='[PassingSacksYardsLost]' role='measure' type='quantitative' />
      <column caption='Passing Sacks' datatype='integer' name='[PassingSacks]' role='measure' type='quantitative' />
      <column caption='Passing Touchdowns' datatype='integer' name='[PassingTouchdowns]' role='measure' type='quantitative' />
      <column caption='Passing Yards' datatype='integer' name='[PassingYards]' role='measure' type='quantitative' />
      <column caption='Punt Return Attempts' datatype='integer' name='[PuntReturnAttempts]' role='measure' type='quantitative' />
      <column caption='Punt Return Touchdowns' datatype='integer' name='[PuntReturnTouchdowns]' role='measure' type='quantitative' />
      <column caption='Punt Return Yards' datatype='integer' name='[PuntReturnYards]' role='measure' type='quantitative' />
      <column caption='Punting Attempts' datatype='integer' name='[PuntingAttempts]' role='measure' type='quantitative' />
      <column caption='Punting Yards' datatype='integer' name='[PuntingYards]' role='measure' type='quantitative' />
      <column caption='Punts Blocked' datatype='integer' name='[PuntsBlocked]' role='measure' type='quantitative' />
      <column caption='Receiving Receptions' datatype='integer' name='[ReceivingReceptions]' role='measure' type='quantitative' />
      <column caption='Receiving Targets' datatype='integer' name='[ReceivingTargets]' role='measure' type='quantitative' />
      <column caption='Receiving Touchdowns' datatype='integer' name='[ReceivingTouchdowns]' role='measure' type='quantitative' />
      <column caption='Receiving Yards' datatype='integer' name='[ReceivingYards]' role='measure' type='quantitative' />
      <column datatype='string' name='[Result]' role='dimension' type='nominal' />
      <column caption='Rushing Attempts' datatype='integer' name='[RushingAttempts]' role='measure' type='quantitative' />
      <column caption='Rushing Touchdowns' datatype='integer' name='[RushingTouchdowns]' role='measure' type='quantitative' />
      <column caption='Rushing Yards' datatype='integer' name='[RushingYards]' role='measure' type='quantitative' />
      <column caption='Team Score' datatype='integer' name='[TeamScore]' role='measure' type='quantitative' />
      <column datatype='string' name='[Team]' role='dimension' type='nominal' />
      <column datatype='string' name='[Year]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='nfl_football_team_stats.csv' datatype='table' name='[__tableau_internal_object_id__].[nfl_football_team_stats.csv_4577BEBD2FEA4F8885A10FF5645E1534]' role='measure' type='quantitative' />
      <column-instance column='[GameNumber]' derivation='None' name='[none:GameNumber:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Result]' derivation='None' name='[none:Result:nk]' pivot='key' type='nominal' />
      <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='nominal' />
      <group hidden='true' name='[Inclusions (Game Number,Result,Team,Year)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:GameNumber:ok]' />
          <groupfilter function='level-members' level='[none:Result:nk]' />
          <groupfilter function='level-members' level='[none:Team:nk]' />
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Result:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Win&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Loss&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Mexico&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='nfl_football_team_stats.csv' id='nfl_football_team_stats.csv_4577BEBD2FEA4F8885A10FF5645E1534'>
            <properties context=''>
              <relation connection='textscan.1aosh231cjualb10nkfke0ordblf' name='nfl_football_team_stats.csv' table='[nfl_football_team_stats#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='es_MX' separator=','>
                  <column datatype='string' name='Year' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='integer' name='GameNumber' ordinal='2' />
                  <column datatype='string' name='GameLocation' ordinal='3' />
                  <column datatype='string' name='Team' ordinal='4' />
                  <column datatype='integer' name='TeamScore' ordinal='5' />
                  <column datatype='string' name='Opponent' ordinal='6' />
                  <column datatype='integer' name='OppponentScore' ordinal='7' />
                  <column datatype='string' name='Result' ordinal='8' />
                  <column datatype='integer' name='PassingAttempts' ordinal='9' />
                  <column datatype='integer' name='PassingCompletions' ordinal='10' />
                  <column datatype='integer' name='PassingInterceptions' ordinal='11' />
                  <column datatype='real' name='PasserRating' ordinal='12' />
                  <column datatype='integer' name='PassingSacks' ordinal='13' />
                  <column datatype='integer' name='PassingSacksYardsLost' ordinal='14' />
                  <column datatype='integer' name='PassingTouchdowns' ordinal='15' />
                  <column datatype='integer' name='PassingYards' ordinal='16' />
                  <column datatype='integer' name='ReceivingReceptions' ordinal='17' />
                  <column datatype='integer' name='ReceivingTargets' ordinal='18' />
                  <column datatype='integer' name='ReceivingTouchdowns' ordinal='19' />
                  <column datatype='integer' name='ReceivingYards' ordinal='20' />
                  <column datatype='integer' name='RushingAttempts' ordinal='21' />
                  <column datatype='integer' name='RushingTouchdowns' ordinal='22' />
                  <column datatype='integer' name='RushingYards' ordinal='23' />
                  <column datatype='integer' name='DefenseTackes' ordinal='24' />
                  <column datatype='integer' name='DefenseTackleAssists' ordinal='25' />
                  <column datatype='real' name='DefenseSacks' ordinal='26' />
                  <column datatype='integer' name='DefenseSafeties' ordinal='27' />
                  <column datatype='integer' name='DefenseInterceptions' ordinal='28' />
                  <column datatype='integer' name='DefenseInterceptionYards' ordinal='29' />
                  <column datatype='integer' name='DefenseInterceptionTouchdowns' ordinal='30' />
                  <column datatype='integer' name='KickReturnAttempts' ordinal='31' />
                  <column datatype='integer' name='KickReturnTouchdowns' ordinal='32' />
                  <column datatype='integer' name='KickReturnYards' ordinal='33' />
                  <column datatype='integer' name='PuntReturnAttempts' ordinal='34' />
                  <column datatype='integer' name='PuntReturnTouchdowns' ordinal='35' />
                  <column datatype='integer' name='PuntReturnYards' ordinal='36' />
                  <column datatype='integer' name='FieldGoalAttempts' ordinal='37' />
                  <column datatype='integer' name='FieldGoals' ordinal='38' />
                  <column datatype='integer' name='PuntingAttempts' ordinal='39' />
                  <column datatype='integer' name='PuntsBlocked' ordinal='40' />
                  <column datatype='integer' name='PuntingYards' ordinal='41' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Number of games played per year'>
      <table>
        <view>
          <datasources>
            <datasource caption='nfl_football_team_stats' name='federated.1edcykc028fet31e6p2j80nohoei' />
          </datasources>
          <datasource-dependencies datasource='federated.1edcykc028fet31e6p2j80nohoei'>
            <column caption='Defense Interception Touchdowns' datatype='integer' name='[DefenseInterceptionTouchdowns]' role='measure' type='quantitative' />
            <column caption='Defense Interception Yards' datatype='integer' name='[DefenseInterceptionYards]' role='measure' type='quantitative' />
            <column caption='Defense Interceptions' datatype='integer' name='[DefenseInterceptions]' role='measure' type='quantitative' />
            <column caption='Defense Sacks' datatype='real' name='[DefenseSacks]' role='measure' type='quantitative' />
            <column caption='Defense Safeties' datatype='integer' name='[DefenseSafeties]' role='measure' type='quantitative' />
            <column caption='Defense Tackes' datatype='integer' name='[DefenseTackes]' role='measure' type='quantitative' />
            <column caption='Defense Tackle Assists' datatype='integer' name='[DefenseTackleAssists]' role='measure' type='quantitative' />
            <column caption='Field Goal Attempts' datatype='integer' name='[FieldGoalAttempts]' role='measure' type='quantitative' />
            <column caption='Field Goals' datatype='integer' name='[FieldGoals]' role='measure' type='quantitative' />
            <column caption='Kick Return Attempts' datatype='integer' name='[KickReturnAttempts]' role='measure' type='quantitative' />
            <column caption='Kick Return Touchdowns' datatype='integer' name='[KickReturnTouchdowns]' role='measure' type='quantitative' />
            <column caption='Kick Return Yards' datatype='integer' name='[KickReturnYards]' role='measure' type='quantitative' />
            <column caption='Oppponent Score' datatype='integer' name='[OppponentScore]' role='measure' type='quantitative' />
            <column caption='Passer Rating' datatype='real' name='[PasserRating]' role='measure' type='quantitative' />
            <column caption='Passing Attempts' datatype='integer' name='[PassingAttempts]' role='measure' type='quantitative' />
            <column caption='Passing Completions' datatype='integer' name='[PassingCompletions]' role='measure' type='quantitative' />
            <column caption='Passing Interceptions' datatype='integer' name='[PassingInterceptions]' role='measure' type='quantitative' />
            <column caption='Passing Sacks Yards Lost' datatype='integer' name='[PassingSacksYardsLost]' role='measure' type='quantitative' />
            <column caption='Passing Sacks' datatype='integer' name='[PassingSacks]' role='measure' type='quantitative' />
            <column caption='Passing Touchdowns' datatype='integer' name='[PassingTouchdowns]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='nominal' />
            <column-instance column='[DefenseInterceptionTouchdowns]' derivation='Sum' name='[sum:DefenseInterceptionTouchdowns:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseInterceptionYards]' derivation='Sum' name='[sum:DefenseInterceptionYards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseInterceptions]' derivation='Sum' name='[sum:DefenseInterceptions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseSacks]' derivation='Sum' name='[sum:DefenseSacks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseSafeties]' derivation='Sum' name='[sum:DefenseSafeties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseTackes]' derivation='Sum' name='[sum:DefenseTackes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseTackleAssists]' derivation='Sum' name='[sum:DefenseTackleAssists:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FieldGoalAttempts]' derivation='Sum' name='[sum:FieldGoalAttempts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FieldGoals]' derivation='Sum' name='[sum:FieldGoals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KickReturnAttempts]' derivation='Sum' name='[sum:KickReturnAttempts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KickReturnTouchdowns]' derivation='Sum' name='[sum:KickReturnTouchdowns:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KickReturnYards]' derivation='Sum' name='[sum:KickReturnYards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OppponentScore]' derivation='Sum' name='[sum:OppponentScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PasserRating]' derivation='Sum' name='[sum:PasserRating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PassingAttempts]' derivation='Sum' name='[sum:PassingAttempts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PassingCompletions]' derivation='Sum' name='[sum:PassingCompletions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PassingInterceptions]' derivation='Sum' name='[sum:PassingInterceptions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PassingSacks]' derivation='Sum' name='[sum:PassingSacks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PassingSacksYardsLost]' derivation='Sum' name='[sum:PassingSacksYardsLost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PassingTouchdowns]' derivation='Sum' name='[sum:PassingTouchdowns:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1edcykc028fet31e6p2j80nohoei].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseInterceptionTouchdowns:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseInterceptionYards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseInterceptions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseSacks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseSafeties:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseTackes:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseTackleAssists:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:FieldGoalAttempts:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:FieldGoals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:KickReturnAttempts:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:KickReturnTouchdowns:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:KickReturnYards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:OppponentScore:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PasserRating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingAttempts:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingCompletions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingInterceptions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingSacks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingSacksYardsLost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingTouchdowns:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1edcykc028fet31e6p2j80nohoei].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1edcykc028fet31e6p2j80nohoei].[:Measure Names]' />
              <lod column='[federated.1edcykc028fet31e6p2j80nohoei].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1edcykc028fet31e6p2j80nohoei].[Multiple Values]</rows>
        <cols>[federated.1edcykc028fet31e6p2j80nohoei].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{FEB020E2-DAA1-4D25-8FB6-FEAAD1059D1F}' />
    </worksheet>
    <worksheet name='Passing statistics in Year 2016'>
      <table>
        <view>
          <datasources>
            <datasource caption='nfl_football_team_stats' name='federated.1edcykc028fet31e6p2j80nohoei' />
          </datasources>
          <datasource-dependencies datasource='federated.1edcykc028fet31e6p2j80nohoei'>
            <column caption='Completion Percentage' datatype='real' name='[Calculation_1243275038302281729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[PassingCompletions]/[PassingAttempts]' />
            </column>
            <column caption='Passing Attempts' datatype='integer' name='[PassingAttempts]' role='measure' type='quantitative' />
            <column caption='Passing Completions' datatype='integer' name='[PassingCompletions]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1243275038302281729]' derivation='Avg' name='[avg:Calculation_1243275038302281729:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='nominal' />
            <column-instance column='[PassingAttempts]' derivation='Sum' name='[sum:PassingAttempts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PassingCompletions]' derivation='Sum' name='[sum:PassingCompletions:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1edcykc028fet31e6p2j80nohoei].[none:Year:ok]'>
            <groupfilter function='member' level='[none:Year:ok]' member='&quot;2016&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1edcykc028fet31e6p2j80nohoei].[avg:Calculation_1243275038302281729:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1edcykc028fet31e6p2j80nohoei].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1edcykc028fet31e6p2j80nohoei].[avg:Calculation_1243275038302281729:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1edcykc028fet31e6p2j80nohoei].[avg:Calculation_1243275038302281729:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingAttempts:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingCompletions:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk]</rows>
        <cols>([federated.1edcykc028fet31e6p2j80nohoei].[avg:Calculation_1243275038302281729:qk] + ([federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingAttempts:qk] + [federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingCompletions:qk]))</cols>
      </table>
      <simple-id uuid='{7DB544AE-AEE5-4C82-9EE7-8B67B3E138B4}' />
    </worksheet>
    <worksheet name='Percentage Completion'>
      <table>
        <view>
          <datasources>
            <datasource caption='nfl_football_team_stats' name='federated.1edcykc028fet31e6p2j80nohoei' />
          </datasources>
          <datasource-dependencies datasource='federated.1edcykc028fet31e6p2j80nohoei'>
            <column caption='Completion Percentage' datatype='real' name='[Calculation_1243275038302281729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[PassingCompletions]/[PassingAttempts]' />
            </column>
            <column caption='Passing Attempts' datatype='integer' name='[PassingAttempts]' role='measure' type='quantitative' />
            <column caption='Passing Completions' datatype='integer' name='[PassingCompletions]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1243275038302281729]' derivation='Avg' name='[avg:Calculation_1243275038302281729:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1edcykc028fet31e6p2j80nohoei].[none:Year:ok]'>
            <groupfilter function='member' level='[none:Year:ok]' member='&quot;2015&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1edcykc028fet31e6p2j80nohoei].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1edcykc028fet31e6p2j80nohoei].[avg:Calculation_1243275038302281729:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1edcykc028fet31e6p2j80nohoei].[avg:Calculation_1243275038302281729:qk]' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1edcykc028fet31e6p2j80nohoei].[avg:Calculation_1243275038302281729:qk]' />
              <color column='[federated.1edcykc028fet31e6p2j80nohoei].[avg:Calculation_1243275038302281729:qk]' />
              <text column='[federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A6EB6338-A20B-4759-9EAE-737FA56DA763}' />
    </worksheet>
    <worksheet name='Playing at home or away'>
      <table>
        <view>
          <datasources>
            <datasource caption='nfl_football_team_stats' name='federated.1edcykc028fet31e6p2j80nohoei' />
          </datasources>
          <datasource-dependencies datasource='federated.1edcykc028fet31e6p2j80nohoei'>
            <column caption='Defense Interception Touchdowns' datatype='integer' name='[DefenseInterceptionTouchdowns]' role='measure' type='quantitative' />
            <column caption='Defense Interception Yards' datatype='integer' name='[DefenseInterceptionYards]' role='measure' type='quantitative' />
            <column caption='Defense Interceptions' datatype='integer' name='[DefenseInterceptions]' role='measure' type='quantitative' />
            <column caption='Defense Sacks' datatype='real' name='[DefenseSacks]' role='measure' type='quantitative' />
            <column caption='Defense Safeties' datatype='integer' name='[DefenseSafeties]' role='measure' type='quantitative' />
            <column caption='Defense Tackes' datatype='integer' name='[DefenseTackes]' role='measure' type='quantitative' />
            <column caption='Defense Tackle Assists' datatype='integer' name='[DefenseTackleAssists]' role='measure' type='quantitative' />
            <column caption='Field Goal Attempts' datatype='integer' name='[FieldGoalAttempts]' role='measure' type='quantitative' />
            <column caption='Field Goals' datatype='integer' name='[FieldGoals]' role='measure' type='quantitative' />
            <column caption='Kick Return Attempts' datatype='integer' name='[KickReturnAttempts]' role='measure' type='quantitative' />
            <column caption='Kick Return Touchdowns' datatype='integer' name='[KickReturnTouchdowns]' role='measure' type='quantitative' />
            <column caption='Kick Return Yards' datatype='integer' name='[KickReturnYards]' role='measure' type='quantitative' />
            <column caption='Oppponent Score' datatype='integer' name='[OppponentScore]' role='measure' type='quantitative' />
            <column caption='Passer Rating' datatype='real' name='[PasserRating]' role='measure' type='quantitative' />
            <column caption='Passing Attempts' datatype='integer' name='[PassingAttempts]' role='measure' type='quantitative' />
            <column caption='Passing Completions' datatype='integer' name='[PassingCompletions]' role='measure' type='quantitative' />
            <column caption='Passing Interceptions' datatype='integer' name='[PassingInterceptions]' role='measure' type='quantitative' />
            <column caption='Passing Sacks Yards Lost' datatype='integer' name='[PassingSacksYardsLost]' role='measure' type='quantitative' />
            <column caption='Passing Sacks' datatype='integer' name='[PassingSacks]' role='measure' type='quantitative' />
            <column caption='Passing Touchdowns' datatype='integer' name='[PassingTouchdowns]' role='measure' type='quantitative' />
            <column datatype='string' name='[Result]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Result]' derivation='None' name='[none:Result:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='nominal' />
            <column-instance column='[DefenseInterceptionTouchdowns]' derivation='Sum' name='[sum:DefenseInterceptionTouchdowns:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseInterceptionYards]' derivation='Sum' name='[sum:DefenseInterceptionYards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseInterceptions]' derivation='Sum' name='[sum:DefenseInterceptions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseSacks]' derivation='Sum' name='[sum:DefenseSacks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseSafeties]' derivation='Sum' name='[sum:DefenseSafeties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseTackes]' derivation='Sum' name='[sum:DefenseTackes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseTackleAssists]' derivation='Sum' name='[sum:DefenseTackleAssists:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FieldGoalAttempts]' derivation='Sum' name='[sum:FieldGoalAttempts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FieldGoals]' derivation='Sum' name='[sum:FieldGoals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KickReturnAttempts]' derivation='Sum' name='[sum:KickReturnAttempts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KickReturnTouchdowns]' derivation='Sum' name='[sum:KickReturnTouchdowns:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KickReturnYards]' derivation='Sum' name='[sum:KickReturnYards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OppponentScore]' derivation='Sum' name='[sum:OppponentScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PasserRating]' derivation='Sum' name='[sum:PasserRating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PassingAttempts]' derivation='Sum' name='[sum:PassingAttempts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PassingCompletions]' derivation='Sum' name='[sum:PassingCompletions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PassingInterceptions]' derivation='Sum' name='[sum:PassingInterceptions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PassingSacks]' derivation='Sum' name='[sum:PassingSacks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PassingSacksYardsLost]' derivation='Sum' name='[sum:PassingSacksYardsLost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PassingTouchdowns]' derivation='Sum' name='[sum:PassingTouchdowns:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1edcykc028fet31e6p2j80nohoei].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseInterceptionTouchdowns:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseInterceptionYards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseInterceptions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseSacks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseSafeties:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseTackes:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseTackleAssists:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:FieldGoalAttempts:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:FieldGoals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:KickReturnAttempts:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:KickReturnTouchdowns:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:KickReturnYards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:OppponentScore:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PasserRating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingAttempts:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingCompletions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingInterceptions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingSacks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingSacksYardsLost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingTouchdowns:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1edcykc028fet31e6p2j80nohoei].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1edcykc028fet31e6p2j80nohoei].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk] * [federated.1edcykc028fet31e6p2j80nohoei].[Multiple Values])</rows>
        <cols>([federated.1edcykc028fet31e6p2j80nohoei].[none:Year:ok] / [federated.1edcykc028fet31e6p2j80nohoei].[none:Result:nk])</cols>
      </table>
      <simple-id uuid='{0D6AD8D1-4B21-44BD-90DB-3F73985C2AA2}' />
    </worksheet>
    <worksheet name='Some defensive statistics'>
      <table>
        <view>
          <datasources>
            <datasource caption='nfl_football_team_stats' name='federated.1edcykc028fet31e6p2j80nohoei' />
          </datasources>
          <datasource-dependencies datasource='federated.1edcykc028fet31e6p2j80nohoei'>
            <column caption='Defense Interceptions' datatype='integer' name='[DefenseInterceptions]' role='measure' type='quantitative' />
            <column caption='Defense Sacks' datatype='real' name='[DefenseSacks]' role='measure' type='quantitative' />
            <column caption='Defense Safeties' datatype='integer' name='[DefenseSafeties]' role='measure' type='quantitative' />
            <column datatype='string' name='[Result]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[DefenseInterceptions]' derivation='Avg' name='[avg:DefenseInterceptions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseSacks]' derivation='Avg' name='[avg:DefenseSacks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseSafeties]' derivation='Avg' name='[avg:DefenseSafeties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Result]' derivation='None' name='[none:Result:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1edcykc028fet31e6p2j80nohoei].[none:Result:nk]'>
            <groupfilter function='member' level='[none:Result:nk]' member='&quot;Win&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1edcykc028fet31e6p2j80nohoei].[none:Result:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseInterceptions:qk]' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseSafeties:qk]' />
              <color column='[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseSacks:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseInterceptions:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseSafeties:qk]' />
              <color column='[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseSacks:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseSacks:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseSafeties:qk]' />
              <color column='[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseSacks:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseSafeties:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseSafeties:qk]' />
              <color column='[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseSacks:qk]' />
              <text column='[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseInterceptions:qk]' />
              <text column='[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseSacks:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk]</rows>
        <cols>([federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseInterceptions:qk] + ([federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseSacks:qk] + [federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseSafeties:qk]))</cols>
      </table>
      <simple-id uuid='{B9B1A757-79DF-4F39-BDA5-0E90E469B3F0}' />
    </worksheet>
    <worksheet name='Team&apos;s defense prevents'>
      <table>
        <view>
          <datasources>
            <datasource caption='nfl_football_team_stats' name='federated.1edcykc028fet31e6p2j80nohoei' />
          </datasources>
          <datasource-dependencies datasource='federated.1edcykc028fet31e6p2j80nohoei'>
            <column caption='Oppponent Score' datatype='integer' name='[OppponentScore]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[OppponentScore]' derivation='Avg' name='[avg:OppponentScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1edcykc028fet31e6p2j80nohoei].[avg:OppponentScore:qk]' field-type='quantitative' max='27.431376323387873' min='18.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1edcykc028fet31e6p2j80nohoei].[avg:OppponentScore:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1edcykc028fet31e6p2j80nohoei].[avg:OppponentScore:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1edcykc028fet31e6p2j80nohoei].[avg:OppponentScore:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1edcykc028fet31e6p2j80nohoei].[avg:OppponentScore:qk]</rows>
        <cols>([federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk] / [federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk])</cols>
      </table>
      <simple-id uuid='{8B70D465-90AA-4612-9CD6-88CC0473D345}' />
    </worksheet>
    <worksheet name='Team&apos;s effectiveness'>
      <table>
        <view>
          <datasources>
            <datasource caption='nfl_football_team_stats' name='federated.1edcykc028fet31e6p2j80nohoei' />
          </datasources>
          <datasource-dependencies datasource='federated.1edcykc028fet31e6p2j80nohoei'>
            <column caption='Oppponent Score' datatype='integer' name='[OppponentScore]' role='measure' type='quantitative' />
            <column caption='Team Score' datatype='integer' name='[TeamScore]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[OppponentScore]' derivation='Avg' name='[avg:OppponentScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TeamScore]' derivation='Avg' name='[avg:TeamScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1edcykc028fet31e6p2j80nohoei].[avg:OppponentScore:qk]' field-type='quantitative' max='27.640399002493766' min='16.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1edcykc028fet31e6p2j80nohoei].[avg:OppponentScore:qk]</rows>
        <cols>[federated.1edcykc028fet31e6p2j80nohoei].[avg:TeamScore:qk]</cols>
      </table>
      <simple-id uuid='{CD32F966-F823-4575-8B86-DD0F4CA44270}' />
    </worksheet>
    <worksheet name='Win/loss proportions of each team by year'>
      <table>
        <view>
          <datasources>
            <datasource caption='nfl_football_team_stats' name='federated.1edcykc028fet31e6p2j80nohoei' />
          </datasources>
          <datasource-dependencies datasource='federated.1edcykc028fet31e6p2j80nohoei'>
            <column caption='Defense Interception Touchdowns' datatype='integer' name='[DefenseInterceptionTouchdowns]' role='measure' type='quantitative' />
            <column caption='Defense Interception Yards' datatype='integer' name='[DefenseInterceptionYards]' role='measure' type='quantitative' />
            <column caption='Defense Interceptions' datatype='integer' name='[DefenseInterceptions]' role='measure' type='quantitative' />
            <column caption='Defense Sacks' datatype='real' name='[DefenseSacks]' role='measure' type='quantitative' />
            <column caption='Defense Safeties' datatype='integer' name='[DefenseSafeties]' role='measure' type='quantitative' />
            <column caption='Defense Tackes' datatype='integer' name='[DefenseTackes]' role='measure' type='quantitative' />
            <column caption='Defense Tackle Assists' datatype='integer' name='[DefenseTackleAssists]' role='measure' type='quantitative' />
            <column caption='Field Goal Attempts' datatype='integer' name='[FieldGoalAttempts]' role='measure' type='quantitative' />
            <column caption='Field Goals' datatype='integer' name='[FieldGoals]' role='measure' type='quantitative' />
            <column caption='Game Number' datatype='integer' name='[GameNumber]' role='dimension' type='ordinal' />
            <column caption='Kick Return Attempts' datatype='integer' name='[KickReturnAttempts]' role='measure' type='quantitative' />
            <column caption='Kick Return Touchdowns' datatype='integer' name='[KickReturnTouchdowns]' role='measure' type='quantitative' />
            <column caption='Kick Return Yards' datatype='integer' name='[KickReturnYards]' role='measure' type='quantitative' />
            <column caption='Oppponent Score' datatype='integer' name='[OppponentScore]' role='measure' type='quantitative' />
            <column caption='Passer Rating' datatype='real' name='[PasserRating]' role='measure' type='quantitative' />
            <column caption='Passing Attempts' datatype='integer' name='[PassingAttempts]' role='measure' type='quantitative' />
            <column caption='Passing Completions' datatype='integer' name='[PassingCompletions]' role='measure' type='quantitative' />
            <column caption='Passing Interceptions' datatype='integer' name='[PassingInterceptions]' role='measure' type='quantitative' />
            <column caption='Passing Sacks Yards Lost' datatype='integer' name='[PassingSacksYardsLost]' role='measure' type='quantitative' />
            <column caption='Passing Sacks' datatype='integer' name='[PassingSacks]' role='measure' type='quantitative' />
            <column caption='Passing Touchdowns' datatype='integer' name='[PassingTouchdowns]' role='measure' type='quantitative' />
            <column datatype='string' name='[Result]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[GameNumber]' derivation='None' name='[none:GameNumber:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Result]' derivation='None' name='[none:Result:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='nominal' />
            <column-instance column='[DefenseInterceptionTouchdowns]' derivation='Sum' name='[sum:DefenseInterceptionTouchdowns:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseInterceptionYards]' derivation='Sum' name='[sum:DefenseInterceptionYards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseInterceptions]' derivation='Sum' name='[sum:DefenseInterceptions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseSacks]' derivation='Sum' name='[sum:DefenseSacks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseSafeties]' derivation='Sum' name='[sum:DefenseSafeties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseTackes]' derivation='Sum' name='[sum:DefenseTackes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DefenseTackleAssists]' derivation='Sum' name='[sum:DefenseTackleAssists:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FieldGoalAttempts]' derivation='Sum' name='[sum:FieldGoalAttempts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FieldGoals]' derivation='Sum' name='[sum:FieldGoals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KickReturnAttempts]' derivation='Sum' name='[sum:KickReturnAttempts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KickReturnTouchdowns]' derivation='Sum' name='[sum:KickReturnTouchdowns:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KickReturnYards]' derivation='Sum' name='[sum:KickReturnYards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OppponentScore]' derivation='Sum' name='[sum:OppponentScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PasserRating]' derivation='Sum' name='[sum:PasserRating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PassingAttempts]' derivation='Sum' name='[sum:PassingAttempts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PassingCompletions]' derivation='Sum' name='[sum:PassingCompletions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PassingInterceptions]' derivation='Sum' name='[sum:PassingInterceptions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PassingSacks]' derivation='Sum' name='[sum:PassingSacks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PassingSacksYardsLost]' derivation='Sum' name='[sum:PassingSacksYardsLost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PassingTouchdowns]' derivation='Sum' name='[sum:PassingTouchdowns:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1edcykc028fet31e6p2j80nohoei].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseInterceptionTouchdowns:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseInterceptionYards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseInterceptions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseSacks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseSafeties:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseTackes:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:DefenseTackleAssists:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:FieldGoalAttempts:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:FieldGoals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:KickReturnAttempts:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:KickReturnTouchdowns:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:KickReturnYards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:OppponentScore:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PasserRating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingAttempts:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingCompletions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingInterceptions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingSacks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingSacksYardsLost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1edcykc028fet31e6p2j80nohoei].[sum:PassingTouchdowns:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1edcykc028fet31e6p2j80nohoei].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1edcykc028fet31e6p2j80nohoei].[none:Result:nk]' />
              <text column='[federated.1edcykc028fet31e6p2j80nohoei].[none:GameNumber:ok]' />
              <lod column='[federated.1edcykc028fet31e6p2j80nohoei].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk] / [federated.1edcykc028fet31e6p2j80nohoei].[none:Result:nk])</rows>
        <cols>([federated.1edcykc028fet31e6p2j80nohoei].[none:Year:ok] * [federated.1edcykc028fet31e6p2j80nohoei].[Multiple Values])</cols>
      </table>
      <simple-id uuid='{F1ED49F8-F275-439B-A3A3-0102723E65B9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='NFL Team Performance Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='8' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='6' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Team&apos;s defense prevents' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='5' name='Some defensive statistics' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='Team&apos;s effectiveness' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='7' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='9' name='Some defensive statistics' pane-specification-id='1' param='[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseSacks:qk]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='88250' id='11' name='Team&apos;s effectiveness' pane-specification-id='0' param='[federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk]' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='13' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='12' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Team&apos;s effectiveness' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='88250' id='11' name='Team&apos;s effectiveness' pane-specification-id='0' param='[federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk]' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Some defensive statistics' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='9' name='Some defensive statistics' pane-specification-id='1' param='[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseSacks:qk]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Team&apos;s defense prevents' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{46449363-D193-402B-AEF6-20F5C2AB8D02}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Number of games played per year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[:Measure Names]</field>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:GameNumber:ok]</field>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:Result:nk]</field>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{29CE45F3-09AC-493E-9703-264B9F42F94E}' />
    </window>
    <window class='worksheet' name='Win/loss proportions of each team by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1edcykc028fet31e6p2j80nohoei].[none:Result:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:GameNumber:ok]</field>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:Result:nk]</field>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk]</field>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A86D2888-ECF9-4CDC-8C7E-019D1ECBA61D}' />
    </window>
    <window class='worksheet' name='Playing at home or away'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:GameLocation:nk]</field>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:GameNumber:ok]</field>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:Result:nk]</field>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk]</field>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0406B861-0771-4839-BDFF-6B759C1BA2A1}' />
    </window>
    <window class='worksheet' name='Team&apos;s effectiveness'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1edcykc028fet31e6p2j80nohoei].[avg:OppponentScore:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:Result:nk]</field>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D0EE227C-3DD4-4D59-AFDB-65DC90D74554}' />
    </window>
    <window class='worksheet' name='Passing statistics in Year 2016'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk]</field>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E9DB0A14-97BC-46EC-8E98-6A43EED2178C}' />
    </window>
    <window class='worksheet' name='Percentage Completion'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1edcykc028fet31e6p2j80nohoei].[none:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1edcykc028fet31e6p2j80nohoei].[avg:Calculation_1243275038302281729:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk]</field>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3954BD54-331E-4069-9E2A-712CCCBD291B}' />
    </window>
    <window class='worksheet' name='Some defensive statistics'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseSacks:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseInterceptions:qk]</field>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseSacks:qk]</field>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[avg:DefenseSafeties:qk]</field>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:Result:nk]</field>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5FAC3AD5-1A46-4878-99DF-C51D0D726C56}' />
    </window>
    <window class='worksheet' name='Team&apos;s defense prevents'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E7FBA483-903B-4CB2-BBFC-E34D842D75C8}' />
    </window>
    <window class='dashboard' maximized='true' name='NFL Team Performance Dashboard'>
      <viewpoints>
        <viewpoint name='Some defensive statistics' />
        <viewpoint name='Team&apos;s defense prevents'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Team&apos;s effectiveness'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1edcykc028fet31e6p2j80nohoei].[none:Team:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B5BC138B-F0E8-49D0-AC40-1C66A6EA990B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='NFL Team Performance Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of games played per year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Passing statistics in Year 2016' width='192'>
      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
      jXP2A8gKJyeVlJyjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Percentage Completion' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Playing at home or away' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Some defensive statistics' width='192'>
      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
      RYrsEP4bD6maeZa6kscAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Team&apos;s defense prevents' width='192'>
      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
      CE7XCGz3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Team&apos;s effectiveness' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Win/loss proportions of each team by year' width='192'>
      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
      bbfjLWw4RZwAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
